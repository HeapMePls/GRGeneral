plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.um.lab.movix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}
jar {
	manifest {
		attributes 'Main-Class': 'com.um.lab.movix.movix.MovixApplication'
	}
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
Properties localBootRunProperties() {
	Properties p = new Properties()
	p.load(new FileInputStream(
			file(project.projectDir).absolutePath + "/local.application.properties"))
	return p
}

bootRun {
	doFirst {
		bootRun.systemProperties = localBootRunProperties()
	}
}